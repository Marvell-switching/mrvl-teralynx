/*******************************************************************************
Copyright (C) Marvell International Ltd. and its affiliates

This software file (the "File") is owned and distributed by Marvell
International Ltd. and/or its affiliates ("Marvell") under the following
alternative licensing terms.  Once you have made an election to distribute the
File under one of the following license alternatives, please (i) delete this
introductory statement regarding license alternatives, (ii) delete the two
license alternatives that you have not elected to use and (iii) preserve the
Marvell copyright notice above.

********************************************************************************
Marvell GPL License Option

If you received this File from Marvell, you may opt to use, redistribute and/or
modify this File in accordance with the terms and conditions of the General
Public License Version 2, June 1991 (the "GPL License"), a copy of which is
available along with the File in the license.txt file or by writing to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
on the worldwide web at http://www.gnu.org/licenses/gpl.txt.

THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
DISCLAIMED.  The GPL License provides additional details about this warranty
disclaimer.
*******************************************************************************/

#ifndef __INNO_CMIPD_V2_H__ 
#define __INNO_CMIPD_V2_H__ 
                         
#ifndef __KERNEL__       
#include <stdint.h>      
#else                    
#include <linux/types.h> 
#endif                   
                         
/************************************
 * AUTOGENERATED FILE - DO NOT EDIT *
*************************************/


/**
 * @file inno_cmipd_v2.h
 * @brief inno_cmipd_v2 CM debug helper header file
 */
#include <linux/types.h>

#define CM_HDR_V2_SIZE 40
typedef struct bitset_v2_s
{
    unsigned int value[4];
    unsigned int num_val;
    unsigned short bit_width;
    unsigned short bit_offset;
} bitset_v2_t;

#define PACK_V2_FIELD(_fldn, _wid, _bid, _bm, _msb)  \
    do {                                            \
        uint32_t i, j;                              \
        bitset_v2_t *fn = &_fldn;                    \
        for (i=0; i < fn->bit_width; i++) {         \
            j = i % 32;                             \
            if ((_bid) > 7) {                       \
                if (_msb) {(_wid)++;}               \
                else {(_wid)--;}                    \
                (_bid)=0;                           \
            }                                       \
            (_bm)[(_wid)] |= ((fn->value[i/32] & (1 << j)) >> j) << (_bid); \
            (_bid)++;                               \
        }                                           \
    } while (0)

#define UNPACK_V2_FIELD(_fldn, _wid, _bid, _bm, _msb) \
    do {                                             \
        uint32_t i, j;                               \
        bitset_v2_t *fn = &_fldn;                     \
        j = _bid % 8;                                \
        if (j==0 && _bid>0) {                        \
            if (_msb) {(w_id)++;}                    \
            else {(w_id)--;}                         \
        }                                            \
        for (i=0; i< fn->bit_width; i++) {           \
            uint32_t shift;                          \
            shift = (_bid - fn->bit_offset) % 32;    \
            if (j > 7) {                             \
                if (_msb) {(_wid)++;}                \
                else {(_wid)--;}                     \
                j = 0;                               \
            }                                        \
            fn->value[i/32] |= (uint32_t) ((bm[_wid] & (1 << j)) >> j) << shift; \
            j++;                                     \
            (_bid)++;                                \
        }                                            \
    } while (0)

typedef struct cfx_v2_s {
    bitset_v2_t ipd_f0;
    bitset_v2_t ipd_f1;
    bitset_v2_t ipd_f2;
    bitset_v2_t ipd_f3;
    bitset_v2_t ipd_f4;
    bitset_v2_t ipd_f5;
    bitset_v2_t ipd_f6;
    bitset_v2_t ipd_f7;
    bitset_v2_t ipd_f8;
    bitset_v2_t ipd_f9;
    bitset_v2_t ipd_f10;
    bitset_v2_t ipd_f11;
    bitset_v2_t ipd_f12;
    bitset_v2_t ipd_f13;
    bitset_v2_t ipd_f14;
    bitset_v2_t ipd_f15;
    bitset_v2_t ipd_f16;
} cfx_v2_t;

typedef struct cfx_v2_fields_s {
    uint32_t ipd_f0[1];
    uint32_t ipd_f1[1];
    uint32_t ipd_f2[1];
    uint32_t ipd_f3[1];
    uint32_t ipd_f4[1];
    uint32_t ipd_f5[1];
    uint32_t ipd_f6[1];
    uint32_t ipd_f7[1];
    uint32_t ipd_f8[1];
    uint32_t ipd_f9[1];
    uint32_t ipd_f10[1];
    uint32_t ipd_f11[1];
    uint32_t ipd_f12[1];
    uint32_t ipd_f13[1];
    uint32_t ipd_f14[1];
    uint32_t ipd_f15[1];
    uint32_t ipd_f16[1];
} cfx_v2_fields_t;

typedef int (cfx_v2_pack_func_t) (cfx_v2_t *, uint8_t *);
typedef cfx_v2_pack_func_t cfx_v2_unpack_func_t;
typedef int (cfx_v2_field_set_func_t) (cfx_v2_fields_t *, cfx_v2_t *);
typedef cfx_v2_field_set_func_t cfx_v2_field_get_func_t;

typedef struct cfx_v2_func_s
{
    cfx_v2_pack_func_t *pack;
    cfx_v2_unpack_func_t *unpack;
    cfx_v2_field_set_func_t *set;
    cfx_v2_field_get_func_t *get;
} cfx_v2_func_t;

int cfx_v2_init(cfx_v2_t* cmp);
int cfx_v2_pack(cfx_v2_t *cm, uint8_t * bm);
int cfx_v2_unpack(cfx_v2_t *cm, uint8_t * bm);
int cfx_v2_set_fields(cfx_v2_fields_t *cmf, cfx_v2_t* cm_menu);
int cfx_v2_clear_fields(cfx_v2_t* cmp);
int cfx_v2_get_fields(cfx_v2_fields_t *cmf, cfx_v2_t* cmp);
extern cfx_v2_t g_cfx_v2;
extern cfx_v2_func_t g_func_cfx_v2;

typedef struct pf2_1_v2_s {
    bitset_v2_t ipd2_f0;
    bitset_v2_t ipd2_f1;
    bitset_v2_t ipd2_f4;
    bitset_v2_t ipd2_f5;
    bitset_v2_t ipd2_f6;
} pf2_1_v2_t;

typedef struct pf2_1_v2_fields_s {
    uint32_t ipd2_f0[4];
    uint32_t ipd2_f1[4];
    uint32_t ipd2_f4[4];
    uint32_t ipd2_f5[4];
    uint32_t ipd2_f6[4];
} pf2_1_v2_fields_t;

typedef int (pf2_1_v2_pack_func_t) (pf2_1_v2_t *, uint8_t *);
typedef pf2_1_v2_pack_func_t pf2_1_v2_unpack_func_t;
typedef int (pf2_1_v2_field_set_func_t) (pf2_1_v2_fields_t *, pf2_1_v2_t *);
typedef pf2_1_v2_field_set_func_t pf2_1_v2_field_get_func_t;

typedef struct pf2_1_v2_func_s
{
    pf2_1_v2_pack_func_t *pack;
    pf2_1_v2_unpack_func_t *unpack;
    pf2_1_v2_field_set_func_t *set;
    pf2_1_v2_field_get_func_t *get;
} pf2_1_v2_func_t;

int pf2_1_v2_init(pf2_1_v2_t* cmp);
int pf2_1_v2_pack(pf2_1_v2_t *cm, uint8_t * bm);
int pf2_1_v2_unpack(pf2_1_v2_t *cm, uint8_t * bm);
int pf2_1_v2_set_fields(pf2_1_v2_fields_t *cmf, pf2_1_v2_t* cm_menu);
int pf2_1_v2_clear_fields(pf2_1_v2_t* cmp);
int pf2_1_v2_get_fields(pf2_1_v2_fields_t *cmf, pf2_1_v2_t* cmp);
extern pf2_1_v2_t g_pf2_1_v2;
extern pf2_1_v2_func_t g_func_pf2_1_v2;

typedef struct pf2_2_v2_s {
    bitset_v2_t ipd2_f0;
    bitset_v2_t ipd2_f1;
    bitset_v2_t ipd2_f2;
    bitset_v2_t ipd2_f3;
    bitset_v2_t ipd2_f4;
    bitset_v2_t ipd2_f5;
    bitset_v2_t ipd2_f6;
} pf2_2_v2_t;

typedef struct pf2_2_v2_fields_s {
    uint32_t ipd2_f0[4];
    uint32_t ipd2_f1[4];
    uint32_t ipd2_f2[4];
    uint32_t ipd2_f3[4];
    uint32_t ipd2_f4[4];
    uint32_t ipd2_f5[4];
    uint32_t ipd2_f6[4];
} pf2_2_v2_fields_t;

typedef int (pf2_2_v2_pack_func_t) (pf2_2_v2_t *, uint8_t *);
typedef pf2_2_v2_pack_func_t pf2_2_v2_unpack_func_t;
typedef int (pf2_2_v2_field_set_func_t) (pf2_2_v2_fields_t *, pf2_2_v2_t *);
typedef pf2_2_v2_field_set_func_t pf2_2_v2_field_get_func_t;

typedef struct pf2_2_v2_func_s
{
    pf2_2_v2_pack_func_t *pack;
    pf2_2_v2_unpack_func_t *unpack;
    pf2_2_v2_field_set_func_t *set;
    pf2_2_v2_field_get_func_t *get;
} pf2_2_v2_func_t;

int pf2_2_v2_init(pf2_2_v2_t* cmp);
int pf2_2_v2_pack(pf2_2_v2_t *cm, uint8_t * bm);
int pf2_2_v2_unpack(pf2_2_v2_t *cm, uint8_t * bm);
int pf2_2_v2_set_fields(pf2_2_v2_fields_t *cmf, pf2_2_v2_t* cm_menu);
int pf2_2_v2_clear_fields(pf2_2_v2_t* cmp);
int pf2_2_v2_get_fields(pf2_2_v2_fields_t *cmf, pf2_2_v2_t* cmp);
extern pf2_2_v2_t g_pf2_2_v2;
extern pf2_2_v2_func_t g_func_pf2_2_v2;

typedef struct pf2_3_v2_s {
    bitset_v2_t ipd2_f0;
    bitset_v2_t ipd2_f1;
    bitset_v2_t ipd2_f2;
    bitset_v2_t ipd2_f3;
    bitset_v2_t ipd2_f4;
    bitset_v2_t ipd2_f5;
    bitset_v2_t ipd2_f6;
} pf2_3_v2_t;

typedef struct pf2_3_v2_fields_s {
    uint32_t ipd2_f0[4];
    uint32_t ipd2_f1[4];
    uint32_t ipd2_f2[4];
    uint32_t ipd2_f3[4];
    uint32_t ipd2_f4[4];
    uint32_t ipd2_f5[4];
    uint32_t ipd2_f6[4];
} pf2_3_v2_fields_t;

typedef int (pf2_3_v2_pack_func_t) (pf2_3_v2_t *, uint8_t *);
typedef pf2_3_v2_pack_func_t pf2_3_v2_unpack_func_t;
typedef int (pf2_3_v2_field_set_func_t) (pf2_3_v2_fields_t *, pf2_3_v2_t *);
typedef pf2_3_v2_field_set_func_t pf2_3_v2_field_get_func_t;

typedef struct pf2_3_v2_func_s
{
    pf2_3_v2_pack_func_t *pack;
    pf2_3_v2_unpack_func_t *unpack;
    pf2_3_v2_field_set_func_t *set;
    pf2_3_v2_field_get_func_t *get;
} pf2_3_v2_func_t;

int pf2_3_v2_init(pf2_3_v2_t* cmp);
int pf2_3_v2_pack(pf2_3_v2_t *cm, uint8_t * bm);
int pf2_3_v2_unpack(pf2_3_v2_t *cm, uint8_t * bm);
int pf2_3_v2_set_fields(pf2_3_v2_fields_t *cmf, pf2_3_v2_t* cm_menu);
int pf2_3_v2_clear_fields(pf2_3_v2_t* cmp);
int pf2_3_v2_get_fields(pf2_3_v2_fields_t *cmf, pf2_3_v2_t* cmp);
extern pf2_3_v2_t g_pf2_3_v2;
extern pf2_3_v2_func_t g_func_pf2_3_v2;

typedef struct pf1_1_v2_s {
    bitset_v2_t ipd1_f0;
    bitset_v2_t ipd1_f1;
    bitset_v2_t ipd1_f2;
    bitset_v2_t ipd1_f3;
} pf1_1_v2_t;

typedef struct pf1_1_v2_fields_s {
    uint32_t ipd1_f0[4];
    uint32_t ipd1_f1[4];
    uint32_t ipd1_f2[4];
    uint32_t ipd1_f3[4];
} pf1_1_v2_fields_t;

typedef int (pf1_1_v2_pack_func_t) (pf1_1_v2_t *, uint8_t *);
typedef pf1_1_v2_pack_func_t pf1_1_v2_unpack_func_t;
typedef int (pf1_1_v2_field_set_func_t) (pf1_1_v2_fields_t *, pf1_1_v2_t *);
typedef pf1_1_v2_field_set_func_t pf1_1_v2_field_get_func_t;

typedef struct pf1_1_v2_func_s
{
    pf1_1_v2_pack_func_t *pack;
    pf1_1_v2_unpack_func_t *unpack;
    pf1_1_v2_field_set_func_t *set;
    pf1_1_v2_field_get_func_t *get;
} pf1_1_v2_func_t;

int pf1_1_v2_init(pf1_1_v2_t* cmp);
int pf1_1_v2_pack(pf1_1_v2_t *cm, uint8_t * bm);
int pf1_1_v2_unpack(pf1_1_v2_t *cm, uint8_t * bm);
int pf1_1_v2_set_fields(pf1_1_v2_fields_t *cmf, pf1_1_v2_t* cm_menu);
int pf1_1_v2_clear_fields(pf1_1_v2_t* cmp);
int pf1_1_v2_get_fields(pf1_1_v2_fields_t *cmf, pf1_1_v2_t* cmp);
extern pf1_1_v2_t g_pf1_1_v2;
extern pf1_1_v2_func_t g_func_pf1_1_v2;

typedef struct pf1_2_v2_s {
    bitset_v2_t ipd1_f4;
    bitset_v2_t ipd1_f0;
    bitset_v2_t ipd1_f1;
    bitset_v2_t ipd1_f5;
    bitset_v2_t ipd1_f2;
    bitset_v2_t ipd1_f3;
} pf1_2_v2_t;

typedef struct pf1_2_v2_fields_s {
    uint32_t ipd1_f4[4];
    uint32_t ipd1_f0[4];
    uint32_t ipd1_f1[4];
    uint32_t ipd1_f5[4];
    uint32_t ipd1_f2[4];
    uint32_t ipd1_f3[4];
} pf1_2_v2_fields_t;

typedef int (pf1_2_v2_pack_func_t) (pf1_2_v2_t *, uint8_t *);
typedef pf1_2_v2_pack_func_t pf1_2_v2_unpack_func_t;
typedef int (pf1_2_v2_field_set_func_t) (pf1_2_v2_fields_t *, pf1_2_v2_t *);
typedef pf1_2_v2_field_set_func_t pf1_2_v2_field_get_func_t;

typedef struct pf1_2_v2_func_s
{
    pf1_2_v2_pack_func_t *pack;
    pf1_2_v2_unpack_func_t *unpack;
    pf1_2_v2_field_set_func_t *set;
    pf1_2_v2_field_get_func_t *get;
} pf1_2_v2_func_t;

int pf1_2_v2_init(pf1_2_v2_t* cmp);
int pf1_2_v2_pack(pf1_2_v2_t *cm, uint8_t * bm);
int pf1_2_v2_unpack(pf1_2_v2_t *cm, uint8_t * bm);
int pf1_2_v2_set_fields(pf1_2_v2_fields_t *cmf, pf1_2_v2_t* cm_menu);
int pf1_2_v2_clear_fields(pf1_2_v2_t* cmp);
int pf1_2_v2_get_fields(pf1_2_v2_fields_t *cmf, pf1_2_v2_t* cmp);
extern pf1_2_v2_t g_pf1_2_v2;
extern pf1_2_v2_func_t g_func_pf1_2_v2;

typedef struct pf1_3_v2_s {
    bitset_v2_t ipd1_f4;
    bitset_v2_t ipd1_f0;
    bitset_v2_t ipd1_f6;
    bitset_v2_t ipd1_f2;
    bitset_v2_t ipd1_f3;
} pf1_3_v2_t;

typedef struct pf1_3_v2_fields_s {
    uint32_t ipd1_f4[4];
    uint32_t ipd1_f0[4];
    uint32_t ipd1_f6[4];
    uint32_t ipd1_f2[4];
    uint32_t ipd1_f3[4];
} pf1_3_v2_fields_t;

typedef int (pf1_3_v2_pack_func_t) (pf1_3_v2_t *, uint8_t *);
typedef pf1_3_v2_pack_func_t pf1_3_v2_unpack_func_t;
typedef int (pf1_3_v2_field_set_func_t) (pf1_3_v2_fields_t *, pf1_3_v2_t *);
typedef pf1_3_v2_field_set_func_t pf1_3_v2_field_get_func_t;

typedef struct pf1_3_v2_func_s
{
    pf1_3_v2_pack_func_t *pack;
    pf1_3_v2_unpack_func_t *unpack;
    pf1_3_v2_field_set_func_t *set;
    pf1_3_v2_field_get_func_t *get;
} pf1_3_v2_func_t;

int pf1_3_v2_init(pf1_3_v2_t* cmp);
int pf1_3_v2_pack(pf1_3_v2_t *cm, uint8_t * bm);
int pf1_3_v2_unpack(pf1_3_v2_t *cm, uint8_t * bm);
int pf1_3_v2_set_fields(pf1_3_v2_fields_t *cmf, pf1_3_v2_t* cm_menu);
int pf1_3_v2_clear_fields(pf1_3_v2_t* cmp);
int pf1_3_v2_get_fields(pf1_3_v2_fields_t *cmf, pf1_3_v2_t* cmp);
extern pf1_3_v2_t g_pf1_3_v2;
extern pf1_3_v2_func_t g_func_pf1_3_v2;

typedef struct pf1_4_v2_s {
    bitset_v2_t ipd1_f4;
    bitset_v2_t ipd1_f0;
    bitset_v2_t ipd1_f5;
    bitset_v2_t ipd1_f6;
    bitset_v2_t ipd1_f2;
    bitset_v2_t ipd1_f3;
} pf1_4_v2_t;

typedef struct pf1_4_v2_fields_s {
    uint32_t ipd1_f4[4];
    uint32_t ipd1_f0[4];
    uint32_t ipd1_f5[4];
    uint32_t ipd1_f6[4];
    uint32_t ipd1_f2[4];
    uint32_t ipd1_f3[4];
} pf1_4_v2_fields_t;

typedef int (pf1_4_v2_pack_func_t) (pf1_4_v2_t *, uint8_t *);
typedef pf1_4_v2_pack_func_t pf1_4_v2_unpack_func_t;
typedef int (pf1_4_v2_field_set_func_t) (pf1_4_v2_fields_t *, pf1_4_v2_t *);
typedef pf1_4_v2_field_set_func_t pf1_4_v2_field_get_func_t;

typedef struct pf1_4_v2_func_s
{
    pf1_4_v2_pack_func_t *pack;
    pf1_4_v2_unpack_func_t *unpack;
    pf1_4_v2_field_set_func_t *set;
    pf1_4_v2_field_get_func_t *get;
} pf1_4_v2_func_t;

int pf1_4_v2_init(pf1_4_v2_t* cmp);
int pf1_4_v2_pack(pf1_4_v2_t *cm, uint8_t * bm);
int pf1_4_v2_unpack(pf1_4_v2_t *cm, uint8_t * bm);
int pf1_4_v2_set_fields(pf1_4_v2_fields_t *cmf, pf1_4_v2_t* cm_menu);
int pf1_4_v2_clear_fields(pf1_4_v2_t* cmp);
int pf1_4_v2_get_fields(pf1_4_v2_fields_t *cmf, pf1_4_v2_t* cmp);
extern pf1_4_v2_t g_pf1_4_v2;
extern pf1_4_v2_func_t g_func_pf1_4_v2;

typedef struct pf1_5_v2_s {
    bitset_v2_t ipd1_f7;
    bitset_v2_t ipd1_f8;
    bitset_v2_t ipd1_f0;
    bitset_v2_t ipd1_f1;
    bitset_v2_t ipd1_f2;
    bitset_v2_t ipd1_f3;
} pf1_5_v2_t;

typedef struct pf1_5_v2_fields_s {
    uint32_t ipd1_f7[4];
    uint32_t ipd1_f8[4];
    uint32_t ipd1_f0[4];
    uint32_t ipd1_f1[4];
    uint32_t ipd1_f2[4];
    uint32_t ipd1_f3[4];
} pf1_5_v2_fields_t;

typedef int (pf1_5_v2_pack_func_t) (pf1_5_v2_t *, uint8_t *);
typedef pf1_5_v2_pack_func_t pf1_5_v2_unpack_func_t;
typedef int (pf1_5_v2_field_set_func_t) (pf1_5_v2_fields_t *, pf1_5_v2_t *);
typedef pf1_5_v2_field_set_func_t pf1_5_v2_field_get_func_t;

typedef struct pf1_5_v2_func_s
{
    pf1_5_v2_pack_func_t *pack;
    pf1_5_v2_unpack_func_t *unpack;
    pf1_5_v2_field_set_func_t *set;
    pf1_5_v2_field_get_func_t *get;
} pf1_5_v2_func_t;

int pf1_5_v2_init(pf1_5_v2_t* cmp);
int pf1_5_v2_pack(pf1_5_v2_t *cm, uint8_t * bm);
int pf1_5_v2_unpack(pf1_5_v2_t *cm, uint8_t * bm);
int pf1_5_v2_set_fields(pf1_5_v2_fields_t *cmf, pf1_5_v2_t* cm_menu);
int pf1_5_v2_clear_fields(pf1_5_v2_t* cmp);
int pf1_5_v2_get_fields(pf1_5_v2_fields_t *cmf, pf1_5_v2_t* cmp);
extern pf1_5_v2_t g_pf1_5_v2;
extern pf1_5_v2_func_t g_func_pf1_5_v2;

typedef struct pf1_6_v2_s {
    bitset_v2_t ipd1_f7;
    bitset_v2_t ipd1_f8;
    bitset_v2_t ipd1_f0;
    bitset_v2_t ipd1_f1;
    bitset_v2_t ipd1_f6;
    bitset_v2_t ipd1_f9;
    bitset_v2_t ipd1_f2;
    bitset_v2_t ipd1_f3;
} pf1_6_v2_t;

typedef struct pf1_6_v2_fields_s {
    uint32_t ipd1_f7[4];
    uint32_t ipd1_f8[4];
    uint32_t ipd1_f0[4];
    uint32_t ipd1_f1[4];
    uint32_t ipd1_f6[4];
    uint32_t ipd1_f9[4];
    uint32_t ipd1_f2[4];
    uint32_t ipd1_f3[4];
} pf1_6_v2_fields_t;

typedef int (pf1_6_v2_pack_func_t) (pf1_6_v2_t *, uint8_t *);
typedef pf1_6_v2_pack_func_t pf1_6_v2_unpack_func_t;
typedef int (pf1_6_v2_field_set_func_t) (pf1_6_v2_fields_t *, pf1_6_v2_t *);
typedef pf1_6_v2_field_set_func_t pf1_6_v2_field_get_func_t;

typedef struct pf1_6_v2_func_s
{
    pf1_6_v2_pack_func_t *pack;
    pf1_6_v2_unpack_func_t *unpack;
    pf1_6_v2_field_set_func_t *set;
    pf1_6_v2_field_get_func_t *get;
} pf1_6_v2_func_t;

int pf1_6_v2_init(pf1_6_v2_t* cmp);
int pf1_6_v2_pack(pf1_6_v2_t *cm, uint8_t * bm);
int pf1_6_v2_unpack(pf1_6_v2_t *cm, uint8_t * bm);
int pf1_6_v2_set_fields(pf1_6_v2_fields_t *cmf, pf1_6_v2_t* cm_menu);
int pf1_6_v2_clear_fields(pf1_6_v2_t* cmp);
int pf1_6_v2_get_fields(pf1_6_v2_fields_t *cmf, pf1_6_v2_t* cmp);
extern pf1_6_v2_t g_pf1_6_v2;
extern pf1_6_v2_func_t g_func_pf1_6_v2;

typedef struct ipd_fields_v2_s {
    uint32_t e1:3;
    uint32_t e2:3;
    uint32_t ttl:9;
    uint32_t vni:13;
    uint32_t l3iif:14;
} ipd_fields_v2_t;

int inno_unpack_cmhdr_v2(uint8_t * buf, ipd_fields_v2_t * ipdfld_p);


#endif /* __INNO_CMIPD_V2_H__ */
